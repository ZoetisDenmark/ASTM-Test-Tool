//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: System.Reflection.AssemblyVersion("32.33.0.0")]
[assembly: System.Windows.Forms.AxHost.TypeLibraryTimeStamp("12/17/2015 12:44:00")]

namespace AxExtLVCTL {
    
    
    [System.Windows.Forms.AxHost.ClsidAttribute("{4881a3ee-dc21-11d4-8235-0010a4c42abd}")]
    [System.ComponentModel.DesignTimeVisibleAttribute(true)]
    [System.ComponentModel.DefaultEvent("HitTestEvent")]
    public class AxExtLV : System.Windows.Forms.AxHost {
        
        private ExtLVCTL._ExtLV ocx;
        
        private AxExtLVEventMulticaster eventMulticaster;
        
        private System.Windows.Forms.AxHost.ConnectionPointCookie cookie;
        
        public AxExtLV() : 
                base("4881a3ee-dc21-11d4-8235-0010a4c42abd") {
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027938)]
        [System.Runtime.InteropServices.ComAliasNameAttribute("stdole.StdFont")]
        public virtual System.Drawing.Font TitleFont {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TitleFont", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return GetFontFromIFont(this.ocx.TitleFont);
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TitleFont", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TitleFont = ((stdole.StdFont)(GetIFontFromFont(value)));
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027931)]
        public virtual int ListViewhWnd {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ListViewhWnd", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ListViewhWnd;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027930)]
        public virtual int DropDownhWnd {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DropDownhWnd", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.DropDownhWnd;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027929)]
        public virtual int TextBoxhWnd {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TextBoxhWnd", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TextBoxhWnd;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027928)]
        [System.Runtime.InteropServices.ComAliasNameAttribute("System.UInt32")]
        public virtual System.Drawing.Color CtlBackColor {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CtlBackColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return GetColorFromOleColor(((uint)(this.ocx.BackColor)));
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CtlBackColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.BackColor = ((uint)(GetOleColorFromColor(value)));
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027927)]
        [System.Runtime.InteropServices.ComAliasNameAttribute("System.UInt32")]
        public virtual System.Drawing.Color CtlForeColor {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CtlForeColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return GetColorFromOleColor(((uint)(this.ocx.ForeColor)));
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CtlForeColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ForeColor = ((uint)(GetOleColorFromColor(value)));
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027926)]
        public virtual bool CtlEnabled {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CtlEnabled", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.Enabled;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CtlEnabled", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Enabled = value;
            }
        }
        
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(-512)]
        [System.Runtime.InteropServices.ComAliasNameAttribute("stdole.StdFont")]
        public override System.Drawing.Font Font {
            get {
                if (((this.ocx != null) 
                            && (this.PropsValid() == true))) {
                    return GetFontFromIFont(this.ocx.Font);
                }
                else {
                    return base.Font;
                }
            }
            set {
                base.Font = value;
                if ((this.ocx != null)) {
                    this.ocx.Font = ((stdole.StdFont)(GetIFontFromFont(value)));
                }
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027925)]
        public virtual VBRUN.BorderStyleConstants BorderStyle {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("BorderStyle", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.BorderStyle;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("BorderStyle", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.BorderStyle = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027924)]
        public virtual MSComctlLib.AppearanceConstants Appearance {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Appearance", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.Appearance;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Appearance", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Appearance = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027923)]
        public virtual MSComctlLib.ListArrangeConstants Arrange {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Arrange", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.Arrange;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Arrange", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Arrange = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027922)]
        public virtual bool Checkboxes {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Checkboxes", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.Checkboxes;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Checkboxes", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Checkboxes = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027921)]
        public virtual object ColumnHeaderIcons {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ColumnHeaderIcons", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ColumnHeaderIcons;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ColumnHeaderIcons", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ColumnHeaderIcons = value;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027920)]
        public virtual MSComctlLib.ColumnHeaders ColumnHeaders {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ColumnHeaders", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ColumnHeaders;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027919)]
        public virtual bool FontBold {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FontBold", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.FontBold;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FontBold", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.FontBold = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027918)]
        public virtual bool FontItalic {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FontItalic", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.FontItalic;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FontItalic", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.FontItalic = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027917)]
        public virtual string FontName {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FontName", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.FontName;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FontName", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.FontName = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027916)]
        public virtual float FontSize {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FontSize", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.FontSize;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FontSize", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.FontSize = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027915)]
        public virtual bool FontStrikethru {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FontStrikethru", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.FontStrikethru;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FontStrikethru", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.FontStrikethru = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027914)]
        public virtual bool FontUnderline {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FontUnderline", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.FontUnderline;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FontUnderline", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.FontUnderline = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027913)]
        public virtual bool FullRowSelect {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FullRowSelect", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.FullRowSelect;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FullRowSelect", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.FullRowSelect = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027912)]
        public virtual bool GridLines {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GridLines", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.GridLines;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GridLines", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.GridLines = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027911)]
        public virtual bool HideColumnHeaders {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("HideColumnHeaders", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.HideColumnHeaders;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("HideColumnHeaders", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.HideColumnHeaders = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027910)]
        public virtual bool HideSelection {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("HideSelection", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.HideSelection;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("HideSelection", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.HideSelection = value;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027909)]
        [System.Runtime.InteropServices.ComAliasNameAttribute("System.Int32")]
        public virtual int hwnd {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("hwnd", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return (this.ocx.hwnd);
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027908)]
        public virtual object Icons {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Icons", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.Icons;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Icons", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Icons = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027906)]
        public virtual short ListCount {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ListCount", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ListCount;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027905)]
        public virtual string PasswordChar {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PasswordChar", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.PasswordChar;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PasswordChar", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.PasswordChar = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027904)]
        [System.Runtime.InteropServices.ComAliasNameAttribute("stdole.StdPicture")]
        public virtual System.Drawing.Image Picture {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Picture", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return GetPictureFromIPicture(this.ocx.Picture);
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Picture", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Picture = ((stdole.StdPicture)(GetIPictureFromPicture(value)));
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027903)]
        public virtual MSComctlLib.ListPictureAlignmentConstants PictureAlignment {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PictureAlignment", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.PictureAlignment;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PictureAlignment", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.PictureAlignment = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027902)]
        public virtual short ScrollBars {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ScrollBars", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ScrollBars;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027901)]
        public virtual int SelLength {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SelLength", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.SelLength;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SelLength", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.SelLength = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027900)]
        public virtual int SelStart {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SelStart", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.SelStart;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SelStart", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.SelStart = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027899)]
        public virtual string SelText {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SelText", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.SelText;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SelText", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.SelText = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027898)]
        public virtual object SmallIcons {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SmallIcons", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.SmallIcons;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SmallIcons", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.SmallIcons = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027897)]
        public virtual bool Sorted {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Sorted", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.Sorted;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Sorted", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Sorted = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027896)]
        public virtual short SortKey {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SortKey", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.SortKey;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SortKey", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.SortKey = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027895)]
        public virtual MSComctlLib.ListSortOrderConstants SortOrder {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SortOrder", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.SortOrder;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SortOrder", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.SortOrder = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027894)]
        public virtual short Style {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Style", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.Style;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027893)]
        public virtual string CtlText {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CtlText", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.Text;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CtlText", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Text = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027892)]
        public virtual MSComctlLib.ListViewConstants View {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("View", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.View;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("View", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.View = value;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027891)]
        public virtual MSComctlLib.ListItems ListItems {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ListItems", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ListItems;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027890)]
        public virtual MSComctlLib.ListItem SelectedItem {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SelectedItem", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.SelectedItem;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027889)]
        public virtual int SubItemClicked {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SubItemClicked", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.SubItemClicked;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SubItemClicked", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.SubItemClicked = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027888)]
        public virtual string DropDownText {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DropDownText", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.DropDownText;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DropDownText", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.DropDownText = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027887)]
        public virtual short NewIndex {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("NewIndex", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.NewIndex;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027886)]
        public virtual short ListIndex {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ListIndex", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ListIndex;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ListIndex", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ListIndex = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027884)]
        public virtual bool AutoSort {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AutoSort", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.AutoSort;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AutoSort", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.AutoSort = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027883)]
        [System.Runtime.InteropServices.ComAliasNameAttribute("System.UInt32")]
        public virtual System.Drawing.Color CalendarTrailingForeColor {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CalendarTrailingForeColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return GetColorFromOleColor(((uint)(this.ocx.CalendarTrailingForeColor)));
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CalendarTrailingForeColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.CalendarTrailingForeColor = ((uint)(GetOleColorFromColor(value)));
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027882)]
        [System.Runtime.InteropServices.ComAliasNameAttribute("System.UInt32")]
        public virtual System.Drawing.Color CalendarTitleForeColor {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CalendarTitleForeColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return GetColorFromOleColor(((uint)(this.ocx.CalendarTitleForeColor)));
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CalendarTitleForeColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.CalendarTitleForeColor = ((uint)(GetOleColorFromColor(value)));
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027881)]
        [System.Runtime.InteropServices.ComAliasNameAttribute("System.UInt32")]
        public virtual System.Drawing.Color CalendarTitleBackColor {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CalendarTitleBackColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return GetColorFromOleColor(((uint)(this.ocx.CalendarTitleBackColor)));
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CalendarTitleBackColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.CalendarTitleBackColor = ((uint)(GetOleColorFromColor(value)));
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027880)]
        [System.Runtime.InteropServices.ComAliasNameAttribute("System.UInt32")]
        public virtual System.Drawing.Color CalendarForeColor {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CalendarForeColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return GetColorFromOleColor(((uint)(this.ocx.CalendarForeColor)));
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CalendarForeColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.CalendarForeColor = ((uint)(GetOleColorFromColor(value)));
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027879)]
        [System.Runtime.InteropServices.ComAliasNameAttribute("System.UInt32")]
        public virtual System.Drawing.Color CalendarBackColor {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CalendarBackColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return GetColorFromOleColor(((uint)(this.ocx.CalendarBackColor)));
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CalendarBackColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.CalendarBackColor = ((uint)(GetOleColorFromColor(value)));
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027878)]
        public virtual VBRUN.OLEDropConstants OLEDropMode {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("OLEDropMode", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.OLEDropMode;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("OLEDropMode", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.OLEDropMode = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027877)]
        public virtual VBRUN.OLEDragConstants OLEDragMode {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("OLEDragMode", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.OLEDragMode;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("OLEDragMode", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.OLEDragMode = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027876)]
        public virtual bool LabelWrap {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("LabelWrap", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.LabelWrap;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("LabelWrap", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.LabelWrap = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745028112)]
        public virtual bool IconClicked {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("IconClicked", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.IconClicked;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745028200)]
        public virtual bool AllowColumnReorder {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AllowColumnReorder", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.AllowColumnReorder;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AllowColumnReorder", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.AllowColumnReorder = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745028479)]
        public virtual object ComboBoxControl {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ComboBoxControl", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ComboBoxControl;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745028517)]
        public virtual object CommandButtonControl {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CommandButtonControl", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.CommandButtonControl;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745028516)]
        public virtual object TextBoxControl {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TextBoxControl", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TextBoxControl;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1073940030)]
        public virtual VBA.Collection FilteredListItems {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FilteredListItems", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.FilteredListItems;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FilteredListItems", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.FilteredListItems = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745028709)]
        public virtual object ListViewControl {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ListViewControl", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ListViewControl;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745028710)]
        public virtual object CalendarControl {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CalendarControl", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.CalendarControl;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745028711)]
        public virtual object TitleBarLabelControl {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TitleBarLabelControl", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TitleBarLabelControl;
            }
        }
        
        public event @__ExtLV_HitTestEventHandler HitTestEvent;
        
        public event @__ExtLV_OLEStartDragEventHandler OLEStartDrag;
        
        public event @__ExtLV_OLESetDataEventHandler OLESetData;
        
        public event @__ExtLV_OLEGiveFeedbackEventHandler OLEGiveFeedback;
        
        public event @__ExtLV_OLEDragOverEventHandler OLEDragOver;
        
        public event @__ExtLV_OLEDragDropEventHandler OLEDragDrop;
        
        public event @__ExtLV_OLECompleteDragEventHandler OLECompleteDrag;
        
        public event @__ExtLV_CalendarChangeCompleteEventHandler CalendarChangeComplete;
        
        public event @__ExtLV_CalendarChangeEventHandler CalendarChange;
        
        public event @__ExtLV_ChangeCompleteEventHandler ChangeComplete;
        
        public event @__ExtLV_DropDownChangeCompleteEventHandler DropDownChangeComplete;
        
        public event @__ExtLV_DropDownChangeEventHandler DropDownChange;
        
        public event System.EventHandler DropDownClick;
        
        public event System.EventHandler ClickEvent;
        
        public event System.EventHandler DblClick;
        
        public event @__ExtLV_KeyDownEventHandler KeyDownEvent;
        
        public event @__ExtLV_KeyPressEventHandler KeyPressEvent;
        
        public event @__ExtLV_KeyUpEventHandler KeyUpEvent;
        
        public event @__ExtLV_MouseDownEventHandler MouseDownEvent;
        
        public event @__ExtLV_MouseMoveEventHandler MouseMoveEvent;
        
        public event @__ExtLV_MouseUpEventHandler MouseUpEvent;
        
        public event @__ExtLV_ChangeEventHandler Change;
        
        public event @__ExtLV_ColumnClickEventHandler ColumnClick;
        
        public event System.EventHandler DropDown;
        
        public event @__ExtLV_ItemCheckEventHandler ItemCheck;
        
        public event @__ExtLV_ItemClickEventHandler ItemClick;
        
        public event System.EventHandler Scroll;
        
        public event @__ExtLV_NotInListEventHandler NotInList;
        
        public event System.EventHandler ColumnSortComplete;
        
        public event @__ExtLV_BeforeColumnSortEventHandler BeforeColumnSort;
        
        public event @__ExtLV_TitleBarClickEventHandler TitleBarClick;
        
        public event System.EventHandler CommandButtonClick;
        
        public event @__ExtLV_ExportToExcelCompleteEventHandler ExportToExcelComplete;
        
        public event @__ExtLV_TabRequestEventHandler TabRequest;
        
        public event @__ExtLV_TextBoxValidateEventHandler TextBoxValidate;
        
        public event @__ExtLV_ComboBoxValidateEventHandler ComboBoxValidate;
        
        public event @__ExtLV_CalendarValidateEventHandler CalendarValidate;
        
        public event System.EventHandler SpinnerDownClick;
        
        public event System.EventHandler SpinnerUpClick;
        
        public event @__ExtLV_TabClickEventHandler TabClick;
        
        public virtual string get_ColOrderAppName() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_ColOrderAppName", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            string returnValue = ((string)(this.ocx.get_ColOrderAppName()));
            return returnValue;
        }
        
        public virtual void set_ColOrderAppName(ref string param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_ColOrderAppName", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_ColOrderAppName(ref param0);
        }
        
        public virtual string get_ColOrderSettingName() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_ColOrderSettingName", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            string returnValue = ((string)(this.ocx.get_ColOrderSettingName()));
            return returnValue;
        }
        
        public virtual void set_ColOrderSettingName(ref string param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_ColOrderSettingName", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_ColOrderSettingName(ref param0);
        }
        
        public virtual void RestoreColumnOrder() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("RestoreColumnOrder", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.RestoreColumnOrder();
        }
        
        public virtual void SaveColumnOrder() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SaveColumnOrder", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SaveColumnOrder();
        }
        
        public virtual void ShowTextBoxWithSpinner() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ShowTextBoxWithSpinner", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object[] paramArray = new object[] {
                    ""};
            System.Type typeVar = typeof(ExtLVCTL._ExtLV);
            System.Reflection.MethodInfo methodToInvoke = typeVar.GetMethod("ShowTextBoxWithSpinner");
            methodToInvoke.Invoke(this.ocx, paramArray);
        }
        
        public virtual void ShowTextBoxWithSpinner(ref string defaultText) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ShowTextBoxWithSpinner", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.ShowTextBoxWithSpinner(ref defaultText);
        }
        
        public virtual void PlaySound(ref ExtLVCTL.CtrlSounds s) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PlaySound", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.PlaySound(ref s);
        }
        
        public virtual bool get_Tabs() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_Tabs", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            bool returnValue = ((bool)(this.ocx.get_Tabs()));
            return returnValue;
        }
        
        public virtual void set_Tabs(ref bool param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_Tabs", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_Tabs(ref param0);
        }
        
        public virtual string get_TabCaptions() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_TabCaptions", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            string returnValue = ((string)(this.ocx.get_TabCaptions()));
            return returnValue;
        }
        
        public virtual void set_TabCaptions(ref string param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_TabCaptions", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_TabCaptions(ref param0);
        }
        
        public virtual ExtLVCTL.TabStyles get_TabStyle() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_TabStyle", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            ExtLVCTL.TabStyles returnValue = ((ExtLVCTL.TabStyles)(this.ocx.get_TabStyle()));
            return returnValue;
        }
        
        public virtual void set_TabStyle(ref ExtLVCTL.TabStyles param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_TabStyle", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_TabStyle(ref param0);
        }
        
        public virtual ExtLVCTL.TabPlacements get_TabPlacement() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_TabPlacement", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            ExtLVCTL.TabPlacements returnValue = ((ExtLVCTL.TabPlacements)(this.ocx.get_TabPlacement()));
            return returnValue;
        }
        
        public virtual void set_TabPlacement(ref ExtLVCTL.TabPlacements param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_TabPlacement", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_TabPlacement(ref param0);
        }
        
        public virtual int get_SelectedTab() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_SelectedTab", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.get_SelectedTab()));
            return returnValue;
        }
        
        public virtual void set_SelectedTab(ref int param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_SelectedTab", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_SelectedTab(ref param0);
        }
        
        public virtual bool get_RightToLeft() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_RightToLeft", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            bool returnValue = ((bool)(this.ocx.get_RightToLeft()));
            return returnValue;
        }
        
        public virtual void set_RightToLeft(ref bool param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_RightToLeft", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_RightToLeft(ref param0);
        }
        
        public virtual void set_SortArrowUpPicture(ref System.Drawing.Image param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_SortArrowUpPicture", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            stdole.StdPicture _param0 = ((stdole.StdPicture)(GetIPictureFromPicture(param0)));
            this.ocx.set_SortArrowUpPicture(ref _param0);
            param0 = GetPictureFromIPicture(((stdole.StdPicture)(_param0)));
        }
        
        public virtual System.Drawing.Image get_SortArrowUpPicture() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_SortArrowUpPicture", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            stdole.StdPicture returnValue = ((stdole.StdPicture)(this.ocx.get_SortArrowUpPicture()));
            return GetPictureFromIPicture(returnValue);
        }
        
        public virtual void set_SortArrowDownPicture(ref System.Drawing.Image param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_SortArrowDownPicture", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            stdole.StdPicture _param0 = ((stdole.StdPicture)(GetIPictureFromPicture(param0)));
            this.ocx.set_SortArrowDownPicture(ref _param0);
            param0 = GetPictureFromIPicture(((stdole.StdPicture)(_param0)));
        }
        
        public virtual System.Drawing.Image get_SortArrowDownPicture() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_SortArrowDownPicture", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            stdole.StdPicture returnValue = ((stdole.StdPicture)(this.ocx.get_SortArrowDownPicture()));
            return GetPictureFromIPicture(returnValue);
        }
        
        public virtual void set_SortArrowSize(ref int param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_SortArrowSize", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_SortArrowSize(ref param0);
        }
        
        public virtual int get_SortArrowSize() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_SortArrowSize", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.get_SortArrowSize()));
            return returnValue;
        }
        
        public virtual void SetFocusToTextBox() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetFocusToTextBox", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SetFocusToTextBox();
        }
        
        public virtual void SetFocusToDropdown() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetFocusToDropdown", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SetFocusToDropdown();
        }
        
        public virtual void SetFocusToCommandButton() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetFocusToCommandButton", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SetFocusToCommandButton();
        }
        
        public virtual void PerformSortOnColumn(ref int colINDEX, ref ExtLVCTL.SortDataType sOrder, ref ExtLVCTL.SortDataDir sdir) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PerformSortOnColumn", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.PerformSortOnColumn(ref colINDEX, ref sOrder, ref sdir);
        }
        
        public virtual void PrintToDefaultPrinter() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintToDefaultPrinter", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.PrintToDefaultPrinter();
        }
        
        public virtual string get_PrintingReportHeader() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_PrintingReportHeader", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            string returnValue = ((string)(this.ocx.get_PrintingReportHeader()));
            return returnValue;
        }
        
        public virtual void set_PrintingReportHeader(ref string param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_PrintingReportHeader", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_PrintingReportHeader(ref param0);
        }
        
        public virtual void PrintToDefaultPrinterLandscape() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PrintToDefaultPrinterLandscape", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.PrintToDefaultPrinterLandscape();
        }
        
        public virtual void Filter(ref string searchSTR, ref int subItemIndex) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Filter", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object[] paramArray = new object[] {
                    searchSTR,
                    subItemIndex,
                    ((bool)(false))};
            System.Type typeVar = typeof(ExtLVCTL._ExtLV);
            System.Reflection.MethodInfo methodToInvoke = typeVar.GetMethod("Filter");
            methodToInvoke.Invoke(this.ocx, paramArray);
            searchSTR = ((string)(paramArray[0]));
            subItemIndex = ((int)(paramArray[1]));
        }
        
        public virtual void Filter(ref string searchSTR, ref int subItemIndex, ref bool excludeMatch) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Filter", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.Filter(ref searchSTR, ref subItemIndex, ref excludeMatch);
        }
        
        public virtual void FilterRemove() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FilterRemove", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.FilterRemove();
        }
        
        public virtual void FilterWild(ref string searchSTR, ref int subItemIndex) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FilterWild", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object[] paramArray = new object[] {
                    searchSTR,
                    subItemIndex,
                    ((bool)(false))};
            System.Type typeVar = typeof(ExtLVCTL._ExtLV);
            System.Reflection.MethodInfo methodToInvoke = typeVar.GetMethod("FilterWild");
            methodToInvoke.Invoke(this.ocx, paramArray);
            searchSTR = ((string)(paramArray[0]));
            subItemIndex = ((int)(paramArray[1]));
        }
        
        public virtual void FilterWild(ref string searchSTR, ref int subItemIndex, ref bool excludeMatch) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FilterWild", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.FilterWild(ref searchSTR, ref subItemIndex, ref excludeMatch);
        }
        
        public virtual void PopupMenu(object menu) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PopupMenu", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object[] paramArray = new object[] {
                    menu,
                    System.Reflection.Missing.Value,
                    System.Reflection.Missing.Value,
                    System.Reflection.Missing.Value,
                    System.Reflection.Missing.Value};
            System.Type typeVar = typeof(ExtLVCTL._ExtLV);
            System.Reflection.MethodInfo methodToInvoke = typeVar.GetMethod("PopupMenu");
            methodToInvoke.Invoke(this.ocx, paramArray);
        }
        
        public virtual void PopupMenu(object menu, object flags, object x, object y, object defaultMenu) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PopupMenu", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.PopupMenu(menu, flags, x, y, defaultMenu);
        }
        
        public virtual void RemoveItem(short index) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("RemoveItem", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.RemoveItem(index);
        }
        
        public virtual void SizeColumns() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SizeColumns", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SizeColumns();
        }
        
        public virtual void ShowTextBox() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ShowTextBox", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object[] paramArray = new object[] {
                    ""};
            System.Type typeVar = typeof(ExtLVCTL._ExtLV);
            System.Reflection.MethodInfo methodToInvoke = typeVar.GetMethod("ShowTextBox");
            methodToInvoke.Invoke(this.ocx, paramArray);
        }
        
        public virtual void ShowTextBox(ref string defaultText) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ShowTextBox", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.ShowTextBox(ref defaultText);
        }
        
        public virtual void ShowCommandButton() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ShowCommandButton", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.ShowCommandButton();
        }
        
        public virtual void ShowCalendar() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ShowCalendar", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object[] paramArray = new object[] {
                    ""};
            System.Type typeVar = typeof(ExtLVCTL._ExtLV);
            System.Reflection.MethodInfo methodToInvoke = typeVar.GetMethod("ShowCalendar");
            methodToInvoke.Invoke(this.ocx, paramArray);
        }
        
        public virtual void ShowCalendar(ref string defaultText) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ShowCalendar", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.ShowCalendar(ref defaultText);
        }
        
        public virtual void HideTextBox() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("HideTextBox", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.HideTextBox();
        }
        
        public virtual void HideCalendar() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("HideCalendar", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.HideCalendar();
        }
        
        public virtual void HideCommandButton() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("HideCommandButton", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.HideCommandButton();
        }
        
        public virtual void ShowDropDown() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ShowDropDown", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object[] paramArray = new object[] {
                    ""};
            System.Type typeVar = typeof(ExtLVCTL._ExtLV);
            System.Reflection.MethodInfo methodToInvoke = typeVar.GetMethod("ShowDropDown");
            methodToInvoke.Invoke(this.ocx, paramArray);
        }
        
        public virtual void ShowDropDown(ref string defaultText) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ShowDropDown", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.ShowDropDown(ref defaultText);
        }
        
        public virtual void HideDropDown() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("HideDropDown", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.HideDropDown();
        }
        
        public virtual int get_ItemData(short index) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_ItemData", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.get_ItemData(index)));
            return returnValue;
        }
        
        public virtual void set_ItemData(short index, int param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_ItemData", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_ItemData(index, param0);
        }
        
        public virtual void AddItem(string item) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AddItem", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object[] paramArray = new object[] {
                    item,
                    System.Reflection.Missing.Value};
            System.Type typeVar = typeof(ExtLVCTL._ExtLV);
            System.Reflection.MethodInfo methodToInvoke = typeVar.GetMethod("AddItem");
            methodToInvoke.Invoke(this.ocx, paramArray);
        }
        
        public virtual void AddItem(string item, object index) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AddItem", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.AddItem(item, index);
        }
        
        public virtual void RecordSetFill(ref object rs) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("RecordSetFill", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object[] paramArray = new object[] {
                    rs,
                    "",
                    "",
                    ""};
            System.Type typeVar = typeof(ExtLVCTL._ExtLV);
            System.Reflection.MethodInfo methodToInvoke = typeVar.GetMethod("RecordSetFill");
            methodToInvoke.Invoke(this.ocx, paramArray);
            rs = ((object)(paramArray[0]));
        }
        
        public virtual void RecordSetFill(ref object rs, ref string cols, ref string keycol, ref string colNAMES) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("RecordSetFill", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.RecordSetFill(ref rs, ref cols, ref keycol, ref colNAMES);
        }
        
        public virtual void ExportToExcel(ref string filePathAndName) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ExportToExcel", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object[] paramArray = new object[] {
                    filePathAndName,
                    ((bool)(true))};
            System.Type typeVar = typeof(ExtLVCTL._ExtLV);
            System.Reflection.MethodInfo methodToInvoke = typeVar.GetMethod("ExportToExcel");
            methodToInvoke.Invoke(this.ocx, paramArray);
            filePathAndName = ((string)(paramArray[0]));
        }
        
        public virtual void ExportToExcel(ref string filePathAndName, ref bool openAfterExport) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ExportToExcel", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.ExportToExcel(ref filePathAndName, ref openAfterExport);
        }
        
        public virtual void LockWindow() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("LockWindow", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object[] paramArray = new object[] {
                    ((bool)(false))};
            System.Type typeVar = typeof(ExtLVCTL._ExtLV);
            System.Reflection.MethodInfo methodToInvoke = typeVar.GetMethod("LockWindow");
            methodToInvoke.Invoke(this.ocx, paramArray);
        }
        
        public virtual void LockWindow(ref bool unLockWin) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("LockWindow", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.LockWindow(ref unLockWin);
        }
        
        public virtual void OLEDrag() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("OLEDrag", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.OLEDrag();
        }
        
        public virtual void SetEditableItemsBold(ref string idxSTR) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetEditableItemsBold", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SetEditableItemsBold(ref idxSTR);
        }
        
        public virtual void SetEditableItemsForeColor(ref string idxSTR, ref int clr) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetEditableItemsForeColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SetEditableItemsForeColor(ref idxSTR, ref clr);
        }
        
        public virtual void SetNonEditableItemsForeColor(ref string idxSTR, ref int clr) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetNonEditableItemsForeColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SetNonEditableItemsForeColor(ref idxSTR, ref clr);
        }
        
        public virtual MSComctlLib.ListItem HitTest(ref float x, ref float y) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("HitTest", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            MSComctlLib.ListItem returnValue = ((MSComctlLib.ListItem)(this.ocx.HitTest(ref x, ref y)));
            return returnValue;
        }
        
        public virtual int GetSubItemLeftOnScreen() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetSubItemLeftOnScreen", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.GetSubItemLeftOnScreen()));
            return returnValue;
        }
        
        public virtual int GetSubItemRightOnScreen() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetSubItemRightOnScreen", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.GetSubItemRightOnScreen()));
            return returnValue;
        }
        
        public virtual int GetSubItemTopOnScreen() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetSubItemTopOnScreen", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.GetSubItemTopOnScreen()));
            return returnValue;
        }
        
        public virtual int GetSubItemBottomOnScreen() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetSubItemBottomOnScreen", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.GetSubItemBottomOnScreen()));
            return returnValue;
        }
        
        public virtual void CopyAll() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CopyAll", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.CopyAll();
        }
        
        public virtual MSComctlLib.ListItem FindItem(ref string sz, ref object where, ref object index, ref object fPartial) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FindItem", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            MSComctlLib.ListItem returnValue = ((MSComctlLib.ListItem)(this.ocx.FindItem(ref sz, ref where, ref index, ref fPartial)));
            return returnValue;
        }
        
        public virtual void HideEditAreas() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("HideEditAreas", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object[] paramArray = new object[] {
                    ((bool)(true))};
            System.Type typeVar = typeof(ExtLVCTL._ExtLV);
            System.Reflection.MethodInfo methodToInvoke = typeVar.GetMethod("HideEditAreas");
            methodToInvoke.Invoke(this.ocx, paramArray);
        }
        
        public virtual void HideEditAreas(ref bool checkForChange) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("HideEditAreas", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.HideEditAreas(ref checkForChange);
        }
        
        public virtual void set_LineEvenColor(ref uint param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_LineEvenColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_LineEvenColor(ref param0);
        }
        
        public virtual System.Drawing.Color get_LineEvenColor() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_LineEvenColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            uint returnValue = ((uint)(this.ocx.get_LineEvenColor()));
            return GetColorFromOleColor(returnValue);
        }
        
        public virtual void set_LineOddColor(ref uint param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_LineOddColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_LineOddColor(ref param0);
        }
        
        public virtual System.Drawing.Color get_LineOddColor() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_LineOddColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            uint returnValue = ((uint)(this.ocx.get_LineOddColor()));
            return GetColorFromOleColor(returnValue);
        }
        
        public virtual void set_LineAltColor(ref bool param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_LineAltColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_LineAltColor(ref param0);
        }
        
        public virtual bool get_LineAltColor() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_LineAltColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            bool returnValue = ((bool)(this.ocx.get_LineAltColor()));
            return returnValue;
        }
        
        public virtual void LoadTemplateSetting(ref ExtLVCTL.SettingTemplateTypes st) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("LoadTemplateSetting", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.LoadTemplateSetting(ref st);
        }
        
        public virtual bool get_SortArrows() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_SortArrows", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            bool returnValue = ((bool)(this.ocx.get_SortArrows()));
            return returnValue;
        }
        
        public virtual void set_SortArrows(ref bool param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_SortArrows", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_SortArrows(ref param0);
        }
        
        public virtual int get_DropDelay() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_DropDelay", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.get_DropDelay()));
            return returnValue;
        }
        
        public virtual void set_DropDelay(ref int param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_DropDelay", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_DropDelay(ref param0);
        }
        
        public virtual int get_DropWidth() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_DropWidth", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.get_DropWidth()));
            return returnValue;
        }
        
        public virtual void set_DropWidth(ref int param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_DropWidth", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_DropWidth(ref param0);
        }
        
        public virtual int get_DropLines() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_DropLines", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.get_DropLines()));
            return returnValue;
        }
        
        public virtual void set_DropLines(ref int param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_DropLines", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_DropLines(ref param0);
        }
        
        public virtual bool get_MultiSelect() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_MultiSelect", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            bool returnValue = ((bool)(this.ocx.get_MultiSelect()));
            return returnValue;
        }
        
        public virtual void set_MultiSelect(ref bool param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_MultiSelect", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_MultiSelect(ref param0);
        }
        
        public virtual bool get_PlaySounds() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_PlaySounds", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            bool returnValue = ((bool)(this.ocx.get_PlaySounds()));
            return returnValue;
        }
        
        public virtual void set_PlaySounds(ref bool param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_PlaySounds", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_PlaySounds(ref param0);
        }
        
        public virtual System.Drawing.Color get_TitleForeColor() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_TitleForeColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            uint returnValue = ((uint)(this.ocx.get_TitleForeColor()));
            return GetColorFromOleColor(returnValue);
        }
        
        public virtual void set_TitleForeColor(ref uint param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_TitleForeColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_TitleForeColor(ref param0);
        }
        
        public virtual System.Drawing.Color get_TitleBackColor() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_TitleBackColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            uint returnValue = ((uint)(this.ocx.get_TitleBackColor()));
            return GetColorFromOleColor(returnValue);
        }
        
        public virtual void set_TitleBackColor(ref uint param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_TitleBackColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_TitleBackColor(ref param0);
        }
        
        public virtual int get_TitleHeight() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_TitleHeight", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.get_TitleHeight()));
            return returnValue;
        }
        
        public virtual void set_TitleHeight(ref int param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_TitleHeight", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_TitleHeight(ref param0);
        }
        
        public virtual string get_TitleCaption() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_TitleCaption", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            string returnValue = ((string)(this.ocx.get_TitleCaption()));
            return returnValue;
        }
        
        public virtual void set_TitleCaption(ref string param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_TitleCaption", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_TitleCaption(ref param0);
        }
        
        public virtual bool get_Titlebar() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_Titlebar", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            bool returnValue = ((bool)(this.ocx.get_Titlebar()));
            return returnValue;
        }
        
        public virtual void set_Titlebar(ref bool param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_Titlebar", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_Titlebar(ref param0);
        }
        
        public virtual bool get_SmartColumnSort() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_SmartColumnSort", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            bool returnValue = ((bool)(this.ocx.get_SmartColumnSort()));
            return returnValue;
        }
        
        public virtual void set_SmartColumnSort(ref bool param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_SmartColumnSort", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_SmartColumnSort(ref param0);
        }
        
        public virtual void Refresh() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Refresh", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.Refresh();
        }
        
        public virtual void Clear() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Clear", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.Clear();
        }
        
        public virtual string GetSelectedKeys() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetSelectedKeys", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object[] paramArray = new object[] {
                    ","};
            System.Type typeVar = typeof(ExtLVCTL._ExtLV);
            System.Reflection.MethodInfo methodToInvoke = typeVar.GetMethod("GetSelectedKeys");
            string returnValue = ((string)(methodToInvoke.Invoke(this.ocx, paramArray)));
            return returnValue;
        }
        
        public virtual string GetSelectedKeys(ref string delim) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetSelectedKeys", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            string returnValue = ((string)(this.ocx.GetSelectedKeys(ref delim)));
            return returnValue;
        }
        
        public virtual string GetSelectedIndexes() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetSelectedIndexes", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object[] paramArray = new object[] {
                    ","};
            System.Type typeVar = typeof(ExtLVCTL._ExtLV);
            System.Reflection.MethodInfo methodToInvoke = typeVar.GetMethod("GetSelectedIndexes");
            string returnValue = ((string)(methodToInvoke.Invoke(this.ocx, paramArray)));
            return returnValue;
        }
        
        public virtual string GetSelectedIndexes(ref string delim) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetSelectedIndexes", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            string returnValue = ((string)(this.ocx.GetSelectedIndexes(ref delim)));
            return returnValue;
        }
        
        public virtual MSComctlLib.ListItem GetFirstVisible() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetFirstVisible", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            MSComctlLib.ListItem returnValue = ((MSComctlLib.ListItem)(this.ocx.GetFirstVisible()));
            return returnValue;
        }
        
        public virtual string get_List(short index) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_List", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            string returnValue = ((string)(this.ocx.get_List(index)));
            return returnValue;
        }
        
        public virtual void set_List(short index, string param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_List", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_List(index, param0);
        }
        
        protected override void CreateSink() {
            try {
                this.eventMulticaster = new AxExtLVEventMulticaster(this);
                this.cookie = new System.Windows.Forms.AxHost.ConnectionPointCookie(this.ocx, this.eventMulticaster, typeof(ExtLVCTL.@__ExtLV));
            }
            catch (System.Exception ) {
            }
        }
        
        protected override void DetachSink() {
            try {
                this.cookie.Disconnect();
            }
            catch (System.Exception ) {
            }
        }
        
        protected override void AttachInterfaces() {
            try {
                this.ocx = ((ExtLVCTL._ExtLV)(this.GetOcx()));
            }
            catch (System.Exception ) {
            }
        }
        
        internal void RaiseOnHitTestEvent(object sender, @__ExtLV_HitTestEvent e) {
            if ((this.HitTestEvent != null)) {
                this.HitTestEvent(sender, e);
            }
        }
        
        internal void RaiseOnOLEStartDrag(object sender, @__ExtLV_OLEStartDragEvent e) {
            if ((this.OLEStartDrag != null)) {
                this.OLEStartDrag(sender, e);
            }
        }
        
        internal void RaiseOnOLESetData(object sender, @__ExtLV_OLESetDataEvent e) {
            if ((this.OLESetData != null)) {
                this.OLESetData(sender, e);
            }
        }
        
        internal void RaiseOnOLEGiveFeedback(object sender, @__ExtLV_OLEGiveFeedbackEvent e) {
            if ((this.OLEGiveFeedback != null)) {
                this.OLEGiveFeedback(sender, e);
            }
        }
        
        internal void RaiseOnOLEDragOver(object sender, @__ExtLV_OLEDragOverEvent e) {
            if ((this.OLEDragOver != null)) {
                this.OLEDragOver(sender, e);
            }
        }
        
        internal void RaiseOnOLEDragDrop(object sender, @__ExtLV_OLEDragDropEvent e) {
            if ((this.OLEDragDrop != null)) {
                this.OLEDragDrop(sender, e);
            }
        }
        
        internal void RaiseOnOLECompleteDrag(object sender, @__ExtLV_OLECompleteDragEvent e) {
            if ((this.OLECompleteDrag != null)) {
                this.OLECompleteDrag(sender, e);
            }
        }
        
        internal void RaiseOnCalendarChangeComplete(object sender, @__ExtLV_CalendarChangeCompleteEvent e) {
            if ((this.CalendarChangeComplete != null)) {
                this.CalendarChangeComplete(sender, e);
            }
        }
        
        internal void RaiseOnCalendarChange(object sender, @__ExtLV_CalendarChangeEvent e) {
            if ((this.CalendarChange != null)) {
                this.CalendarChange(sender, e);
            }
        }
        
        internal void RaiseOnChangeComplete(object sender, @__ExtLV_ChangeCompleteEvent e) {
            if ((this.ChangeComplete != null)) {
                this.ChangeComplete(sender, e);
            }
        }
        
        internal void RaiseOnDropDownChangeComplete(object sender, @__ExtLV_DropDownChangeCompleteEvent e) {
            if ((this.DropDownChangeComplete != null)) {
                this.DropDownChangeComplete(sender, e);
            }
        }
        
        internal void RaiseOnDropDownChange(object sender, @__ExtLV_DropDownChangeEvent e) {
            if ((this.DropDownChange != null)) {
                this.DropDownChange(sender, e);
            }
        }
        
        internal void RaiseOnDropDownClick(object sender, System.EventArgs e) {
            if ((this.DropDownClick != null)) {
                this.DropDownClick(sender, e);
            }
        }
        
        internal void RaiseOnClickEvent(object sender, System.EventArgs e) {
            if ((this.ClickEvent != null)) {
                this.ClickEvent(sender, e);
            }
        }
        
        internal void RaiseOnDblClick(object sender, System.EventArgs e) {
            if ((this.DblClick != null)) {
                this.DblClick(sender, e);
            }
        }
        
        internal void RaiseOnKeyDownEvent(object sender, @__ExtLV_KeyDownEvent e) {
            if ((this.KeyDownEvent != null)) {
                this.KeyDownEvent(sender, e);
            }
        }
        
        internal void RaiseOnKeyPressEvent(object sender, @__ExtLV_KeyPressEvent e) {
            if ((this.KeyPressEvent != null)) {
                this.KeyPressEvent(sender, e);
            }
        }
        
        internal void RaiseOnKeyUpEvent(object sender, @__ExtLV_KeyUpEvent e) {
            if ((this.KeyUpEvent != null)) {
                this.KeyUpEvent(sender, e);
            }
        }
        
        internal void RaiseOnMouseDownEvent(object sender, @__ExtLV_MouseDownEvent e) {
            if ((this.MouseDownEvent != null)) {
                this.MouseDownEvent(sender, e);
            }
        }
        
        internal void RaiseOnMouseMoveEvent(object sender, @__ExtLV_MouseMoveEvent e) {
            if ((this.MouseMoveEvent != null)) {
                this.MouseMoveEvent(sender, e);
            }
        }
        
        internal void RaiseOnMouseUpEvent(object sender, @__ExtLV_MouseUpEvent e) {
            if ((this.MouseUpEvent != null)) {
                this.MouseUpEvent(sender, e);
            }
        }
        
        internal void RaiseOnChange(object sender, @__ExtLV_ChangeEvent e) {
            if ((this.Change != null)) {
                this.Change(sender, e);
            }
        }
        
        internal void RaiseOnColumnClick(object sender, @__ExtLV_ColumnClickEvent e) {
            if ((this.ColumnClick != null)) {
                this.ColumnClick(sender, e);
            }
        }
        
        internal void RaiseOnDropDown(object sender, System.EventArgs e) {
            if ((this.DropDown != null)) {
                this.DropDown(sender, e);
            }
        }
        
        internal void RaiseOnItemCheck(object sender, @__ExtLV_ItemCheckEvent e) {
            if ((this.ItemCheck != null)) {
                this.ItemCheck(sender, e);
            }
        }
        
        internal void RaiseOnItemClick(object sender, @__ExtLV_ItemClickEvent e) {
            if ((this.ItemClick != null)) {
                this.ItemClick(sender, e);
            }
        }
        
        internal void RaiseOnScroll(object sender, System.EventArgs e) {
            if ((this.Scroll != null)) {
                this.Scroll(sender, e);
            }
        }
        
        internal void RaiseOnNotInList(object sender, @__ExtLV_NotInListEvent e) {
            if ((this.NotInList != null)) {
                this.NotInList(sender, e);
            }
        }
        
        internal void RaiseOnColumnSortComplete(object sender, System.EventArgs e) {
            if ((this.ColumnSortComplete != null)) {
                this.ColumnSortComplete(sender, e);
            }
        }
        
        internal void RaiseOnBeforeColumnSort(object sender, @__ExtLV_BeforeColumnSortEvent e) {
            if ((this.BeforeColumnSort != null)) {
                this.BeforeColumnSort(sender, e);
            }
        }
        
        internal void RaiseOnTitleBarClick(object sender, @__ExtLV_TitleBarClickEvent e) {
            if ((this.TitleBarClick != null)) {
                this.TitleBarClick(sender, e);
            }
        }
        
        internal void RaiseOnCommandButtonClick(object sender, System.EventArgs e) {
            if ((this.CommandButtonClick != null)) {
                this.CommandButtonClick(sender, e);
            }
        }
        
        internal void RaiseOnExportToExcelComplete(object sender, @__ExtLV_ExportToExcelCompleteEvent e) {
            if ((this.ExportToExcelComplete != null)) {
                this.ExportToExcelComplete(sender, e);
            }
        }
        
        internal void RaiseOnTabRequest(object sender, @__ExtLV_TabRequestEvent e) {
            if ((this.TabRequest != null)) {
                this.TabRequest(sender, e);
            }
        }
        
        internal void RaiseOnTextBoxValidate(object sender, @__ExtLV_TextBoxValidateEvent e) {
            if ((this.TextBoxValidate != null)) {
                this.TextBoxValidate(sender, e);
            }
        }
        
        internal void RaiseOnComboBoxValidate(object sender, @__ExtLV_ComboBoxValidateEvent e) {
            if ((this.ComboBoxValidate != null)) {
                this.ComboBoxValidate(sender, e);
            }
        }
        
        internal void RaiseOnCalendarValidate(object sender, @__ExtLV_CalendarValidateEvent e) {
            if ((this.CalendarValidate != null)) {
                this.CalendarValidate(sender, e);
            }
        }
        
        internal void RaiseOnSpinnerDownClick(object sender, System.EventArgs e) {
            if ((this.SpinnerDownClick != null)) {
                this.SpinnerDownClick(sender, e);
            }
        }
        
        internal void RaiseOnSpinnerUpClick(object sender, System.EventArgs e) {
            if ((this.SpinnerUpClick != null)) {
                this.SpinnerUpClick(sender, e);
            }
        }
        
        internal void RaiseOnTabClick(object sender, @__ExtLV_TabClickEvent e) {
            if ((this.TabClick != null)) {
                this.TabClick(sender, e);
            }
        }
    }
    
    public delegate void @__ExtLV_HitTestEventHandler(object sender, @__ExtLV_HitTestEvent e);
    
    public class @__ExtLV_HitTestEvent {
        
        public float x;
        
        public float y;
        
        public short hitResult;
        
        public @__ExtLV_HitTestEvent(float x, float y, short hitResult) {
            this.x = x;
            this.y = y;
            this.hitResult = hitResult;
        }
    }
    
    public delegate void @__ExtLV_OLEStartDragEventHandler(object sender, @__ExtLV_OLEStartDragEvent e);
    
    public class @__ExtLV_OLEStartDragEvent {
        
        public MSComctlLib.DataObject data;
        
        public int allowedEffects;
        
        public @__ExtLV_OLEStartDragEvent(MSComctlLib.DataObject data, int allowedEffects) {
            this.data = data;
            this.allowedEffects = allowedEffects;
        }
    }
    
    public delegate void @__ExtLV_OLESetDataEventHandler(object sender, @__ExtLV_OLESetDataEvent e);
    
    public class @__ExtLV_OLESetDataEvent {
        
        public MSComctlLib.DataObject data;
        
        public short dataFormat;
        
        public @__ExtLV_OLESetDataEvent(MSComctlLib.DataObject data, short dataFormat) {
            this.data = data;
            this.dataFormat = dataFormat;
        }
    }
    
    public delegate void @__ExtLV_OLEGiveFeedbackEventHandler(object sender, @__ExtLV_OLEGiveFeedbackEvent e);
    
    public class @__ExtLV_OLEGiveFeedbackEvent {
        
        public int effect;
        
        public bool defaultCursors;
        
        public @__ExtLV_OLEGiveFeedbackEvent(int effect, bool defaultCursors) {
            this.effect = effect;
            this.defaultCursors = defaultCursors;
        }
    }
    
    public delegate void @__ExtLV_OLEDragOverEventHandler(object sender, @__ExtLV_OLEDragOverEvent e);
    
    public class @__ExtLV_OLEDragOverEvent {
        
        public MSComctlLib.DataObject data;
        
        public int effect;
        
        public short button;
        
        public short shift;
        
        public float x;
        
        public float y;
        
        public short state;
        
        public @__ExtLV_OLEDragOverEvent(MSComctlLib.DataObject data, int effect, short button, short shift, float x, float y, short state) {
            this.data = data;
            this.effect = effect;
            this.button = button;
            this.shift = shift;
            this.x = x;
            this.y = y;
            this.state = state;
        }
    }
    
    public delegate void @__ExtLV_OLEDragDropEventHandler(object sender, @__ExtLV_OLEDragDropEvent e);
    
    public class @__ExtLV_OLEDragDropEvent {
        
        public MSComctlLib.DataObject data;
        
        public int effect;
        
        public short button;
        
        public short shift;
        
        public float x;
        
        public float y;
        
        public @__ExtLV_OLEDragDropEvent(MSComctlLib.DataObject data, int effect, short button, short shift, float x, float y) {
            this.data = data;
            this.effect = effect;
            this.button = button;
            this.shift = shift;
            this.x = x;
            this.y = y;
        }
    }
    
    public delegate void @__ExtLV_OLECompleteDragEventHandler(object sender, @__ExtLV_OLECompleteDragEvent e);
    
    public class @__ExtLV_OLECompleteDragEvent {
        
        public int effect;
        
        public @__ExtLV_OLECompleteDragEvent(int effect) {
            this.effect = effect;
        }
    }
    
    public delegate void @__ExtLV_CalendarChangeCompleteEventHandler(object sender, @__ExtLV_CalendarChangeCompleteEvent e);
    
    public class @__ExtLV_CalendarChangeCompleteEvent {
        
        public string oldDate;
        
        public string newDate;
        
        public int sI;
        
        public @__ExtLV_CalendarChangeCompleteEvent(string oldDate, string newDate, int sI) {
            this.oldDate = oldDate;
            this.newDate = newDate;
            this.sI = sI;
        }
    }
    
    public delegate void @__ExtLV_CalendarChangeEventHandler(object sender, @__ExtLV_CalendarChangeEvent e);
    
    public class @__ExtLV_CalendarChangeEvent {
        
        public string newDate;
        
        public @__ExtLV_CalendarChangeEvent(string newDate) {
            this.newDate = newDate;
        }
    }
    
    public delegate void @__ExtLV_ChangeCompleteEventHandler(object sender, @__ExtLV_ChangeCompleteEvent e);
    
    public class @__ExtLV_ChangeCompleteEvent {
        
        public string origText;
        
        public string newText;
        
        public @__ExtLV_ChangeCompleteEvent(string origText, string newText) {
            this.origText = origText;
            this.newText = newText;
        }
    }
    
    public delegate void @__ExtLV_DropDownChangeCompleteEventHandler(object sender, @__ExtLV_DropDownChangeCompleteEvent e);
    
    public class @__ExtLV_DropDownChangeCompleteEvent {
        
        public string origText;
        
        public string newText;
        
        public @__ExtLV_DropDownChangeCompleteEvent(string origText, string newText) {
            this.origText = origText;
            this.newText = newText;
        }
    }
    
    public delegate void @__ExtLV_DropDownChangeEventHandler(object sender, @__ExtLV_DropDownChangeEvent e);
    
    public class @__ExtLV_DropDownChangeEvent {
        
        public string origText;
        
        public @__ExtLV_DropDownChangeEvent(string origText) {
            this.origText = origText;
        }
    }
    
    public delegate void @__ExtLV_KeyDownEventHandler(object sender, @__ExtLV_KeyDownEvent e);
    
    public class @__ExtLV_KeyDownEvent {
        
        public short keyCode;
        
        public short shift;
        
        public @__ExtLV_KeyDownEvent(short keyCode, short shift) {
            this.keyCode = keyCode;
            this.shift = shift;
        }
    }
    
    public delegate void @__ExtLV_KeyPressEventHandler(object sender, @__ExtLV_KeyPressEvent e);
    
    public class @__ExtLV_KeyPressEvent {
        
        public short keyAscii;
        
        public @__ExtLV_KeyPressEvent(short keyAscii) {
            this.keyAscii = keyAscii;
        }
    }
    
    public delegate void @__ExtLV_KeyUpEventHandler(object sender, @__ExtLV_KeyUpEvent e);
    
    public class @__ExtLV_KeyUpEvent {
        
        public short keyCode;
        
        public short shift;
        
        public @__ExtLV_KeyUpEvent(short keyCode, short shift) {
            this.keyCode = keyCode;
            this.shift = shift;
        }
    }
    
    public delegate void @__ExtLV_MouseDownEventHandler(object sender, @__ExtLV_MouseDownEvent e);
    
    public class @__ExtLV_MouseDownEvent {
        
        public short button;
        
        public short shift;
        
        public float x;
        
        public float y;
        
        public @__ExtLV_MouseDownEvent(short button, short shift, float x, float y) {
            this.button = button;
            this.shift = shift;
            this.x = x;
            this.y = y;
        }
    }
    
    public delegate void @__ExtLV_MouseMoveEventHandler(object sender, @__ExtLV_MouseMoveEvent e);
    
    public class @__ExtLV_MouseMoveEvent {
        
        public short button;
        
        public short shift;
        
        public float x;
        
        public float y;
        
        public @__ExtLV_MouseMoveEvent(short button, short shift, float x, float y) {
            this.button = button;
            this.shift = shift;
            this.x = x;
            this.y = y;
        }
    }
    
    public delegate void @__ExtLV_MouseUpEventHandler(object sender, @__ExtLV_MouseUpEvent e);
    
    public class @__ExtLV_MouseUpEvent {
        
        public short button;
        
        public short shift;
        
        public float x;
        
        public float y;
        
        public @__ExtLV_MouseUpEvent(short button, short shift, float x, float y) {
            this.button = button;
            this.shift = shift;
            this.x = x;
            this.y = y;
        }
    }
    
    public delegate void @__ExtLV_ChangeEventHandler(object sender, @__ExtLV_ChangeEvent e);
    
    public class @__ExtLV_ChangeEvent {
        
        public string origText;
        
        public @__ExtLV_ChangeEvent(string origText) {
            this.origText = origText;
        }
    }
    
    public delegate void @__ExtLV_ColumnClickEventHandler(object sender, @__ExtLV_ColumnClickEvent e);
    
    public class @__ExtLV_ColumnClickEvent {
        
        public MSComctlLib.ColumnHeader columnHeader;
        
        public @__ExtLV_ColumnClickEvent(MSComctlLib.ColumnHeader columnHeader) {
            this.columnHeader = columnHeader;
        }
    }
    
    public delegate void @__ExtLV_ItemCheckEventHandler(object sender, @__ExtLV_ItemCheckEvent e);
    
    public class @__ExtLV_ItemCheckEvent {
        
        public MSComctlLib.ListItem item;
        
        public @__ExtLV_ItemCheckEvent(MSComctlLib.ListItem item) {
            this.item = item;
        }
    }
    
    public delegate void @__ExtLV_ItemClickEventHandler(object sender, @__ExtLV_ItemClickEvent e);
    
    public class @__ExtLV_ItemClickEvent {
        
        public MSComctlLib.ListItem item;
        
        public short button;
        
        public bool secondClick;
        
        public @__ExtLV_ItemClickEvent(MSComctlLib.ListItem item, short button, bool secondClick) {
            this.item = item;
            this.button = button;
            this.secondClick = secondClick;
        }
    }
    
    public delegate void @__ExtLV_NotInListEventHandler(object sender, @__ExtLV_NotInListEvent e);
    
    public class @__ExtLV_NotInListEvent {
        
        public string oldValue;
        
        public string newValue;
        
        public bool cancel;
        
        public @__ExtLV_NotInListEvent(string oldValue, string newValue, bool cancel) {
            this.oldValue = oldValue;
            this.newValue = newValue;
            this.cancel = cancel;
        }
    }
    
    public delegate void @__ExtLV_BeforeColumnSortEventHandler(object sender, @__ExtLV_BeforeColumnSortEvent e);
    
    public class @__ExtLV_BeforeColumnSortEvent {
        
        public MSComctlLib.ColumnHeader columnHeader;
        
        public ExtLVCTL.SortDataType sortType;
        
        public string omitChar;
        
        public @__ExtLV_BeforeColumnSortEvent(MSComctlLib.ColumnHeader columnHeader, ExtLVCTL.SortDataType sortType, string omitChar) {
            this.columnHeader = columnHeader;
            this.sortType = sortType;
            this.omitChar = omitChar;
        }
    }
    
    public delegate void @__ExtLV_TitleBarClickEventHandler(object sender, @__ExtLV_TitleBarClickEvent e);
    
    public class @__ExtLV_TitleBarClickEvent {
        
        public short button;
        
        public @__ExtLV_TitleBarClickEvent(short button) {
            this.button = button;
        }
    }
    
    public delegate void @__ExtLV_ExportToExcelCompleteEventHandler(object sender, @__ExtLV_ExportToExcelCompleteEvent e);
    
    public class @__ExtLV_ExportToExcelCompleteEvent {
        
        public ExtLVCTL.CEXCEL obj;
        
        public @__ExtLV_ExportToExcelCompleteEvent(ExtLVCTL.CEXCEL obj) {
            this.obj = obj;
        }
    }
    
    public delegate void @__ExtLV_TabRequestEventHandler(object sender, @__ExtLV_TabRequestEvent e);
    
    public class @__ExtLV_TabRequestEvent {
        
        public int itemIndex;
        
        public int currentSubItem;
        
        public int nextSubItem;
        
        public @__ExtLV_TabRequestEvent(int itemIndex, int currentSubItem, int nextSubItem) {
            this.itemIndex = itemIndex;
            this.currentSubItem = currentSubItem;
            this.nextSubItem = nextSubItem;
        }
    }
    
    public delegate void @__ExtLV_TextBoxValidateEventHandler(object sender, @__ExtLV_TextBoxValidateEvent e);
    
    public class @__ExtLV_TextBoxValidateEvent {
        
        public bool cancel;
        
        public @__ExtLV_TextBoxValidateEvent(bool cancel) {
            this.cancel = cancel;
        }
    }
    
    public delegate void @__ExtLV_ComboBoxValidateEventHandler(object sender, @__ExtLV_ComboBoxValidateEvent e);
    
    public class @__ExtLV_ComboBoxValidateEvent {
        
        public bool cancel;
        
        public @__ExtLV_ComboBoxValidateEvent(bool cancel) {
            this.cancel = cancel;
        }
    }
    
    public delegate void @__ExtLV_CalendarValidateEventHandler(object sender, @__ExtLV_CalendarValidateEvent e);
    
    public class @__ExtLV_CalendarValidateEvent {
        
        public bool cancel;
        
        public @__ExtLV_CalendarValidateEvent(bool cancel) {
            this.cancel = cancel;
        }
    }
    
    public delegate void @__ExtLV_TabClickEventHandler(object sender, @__ExtLV_TabClickEvent e);
    
    public class @__ExtLV_TabClickEvent {
        
        public int tabIndex;
        
        public @__ExtLV_TabClickEvent(int tabIndex) {
            this.tabIndex = tabIndex;
        }
    }
    
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    public class AxExtLVEventMulticaster : ExtLVCTL.@__ExtLV {
        
        private AxExtLV parent;
        
        public AxExtLVEventMulticaster(AxExtLV parent) {
            this.parent = parent;
        }
        
        public virtual void HitTest(ref float x, ref float y, ref short hitResult) {
            @__ExtLV_HitTestEvent hittestEvent = new @__ExtLV_HitTestEvent(x, y, hitResult);
            this.parent.RaiseOnHitTestEvent(this.parent, hittestEvent);
            x = hittestEvent.x;
            y = hittestEvent.y;
            hitResult = hittestEvent.hitResult;
        }
        
        public virtual void OLEStartDrag(ref MSComctlLib.DataObject data, ref int allowedEffects) {
            @__ExtLV_OLEStartDragEvent olestartdragEvent = new @__ExtLV_OLEStartDragEvent(data, allowedEffects);
            this.parent.RaiseOnOLEStartDrag(this.parent, olestartdragEvent);
            data = olestartdragEvent.data;
            allowedEffects = olestartdragEvent.allowedEffects;
        }
        
        public virtual void OLESetData(ref MSComctlLib.DataObject data, ref short dataFormat) {
            @__ExtLV_OLESetDataEvent olesetdataEvent = new @__ExtLV_OLESetDataEvent(data, dataFormat);
            this.parent.RaiseOnOLESetData(this.parent, olesetdataEvent);
            data = olesetdataEvent.data;
            dataFormat = olesetdataEvent.dataFormat;
        }
        
        public virtual void OLEGiveFeedback(ref int effect, ref bool defaultCursors) {
            @__ExtLV_OLEGiveFeedbackEvent olegivefeedbackEvent = new @__ExtLV_OLEGiveFeedbackEvent(effect, defaultCursors);
            this.parent.RaiseOnOLEGiveFeedback(this.parent, olegivefeedbackEvent);
            effect = olegivefeedbackEvent.effect;
            defaultCursors = olegivefeedbackEvent.defaultCursors;
        }
        
        public virtual void OLEDragOver(ref MSComctlLib.DataObject data, ref int effect, ref short button, ref short shift, ref float x, ref float y, ref short state) {
            @__ExtLV_OLEDragOverEvent oledragoverEvent = new @__ExtLV_OLEDragOverEvent(data, effect, button, shift, x, y, state);
            this.parent.RaiseOnOLEDragOver(this.parent, oledragoverEvent);
            data = oledragoverEvent.data;
            effect = oledragoverEvent.effect;
            button = oledragoverEvent.button;
            shift = oledragoverEvent.shift;
            x = oledragoverEvent.x;
            y = oledragoverEvent.y;
            state = oledragoverEvent.state;
        }
        
        public virtual void OLEDragDrop(ref MSComctlLib.DataObject data, ref int effect, ref short button, ref short shift, ref float x, ref float y) {
            @__ExtLV_OLEDragDropEvent oledragdropEvent = new @__ExtLV_OLEDragDropEvent(data, effect, button, shift, x, y);
            this.parent.RaiseOnOLEDragDrop(this.parent, oledragdropEvent);
            data = oledragdropEvent.data;
            effect = oledragdropEvent.effect;
            button = oledragdropEvent.button;
            shift = oledragdropEvent.shift;
            x = oledragdropEvent.x;
            y = oledragdropEvent.y;
        }
        
        public virtual void OLECompleteDrag(ref int effect) {
            @__ExtLV_OLECompleteDragEvent olecompletedragEvent = new @__ExtLV_OLECompleteDragEvent(effect);
            this.parent.RaiseOnOLECompleteDrag(this.parent, olecompletedragEvent);
            effect = olecompletedragEvent.effect;
        }
        
        public virtual void CalendarChangeComplete(string oldDate, string newDate, int sI) {
            @__ExtLV_CalendarChangeCompleteEvent calendarchangecompleteEvent = new @__ExtLV_CalendarChangeCompleteEvent(oldDate, newDate, sI);
            this.parent.RaiseOnCalendarChangeComplete(this.parent, calendarchangecompleteEvent);
        }
        
        public virtual void CalendarChange(string newDate) {
            @__ExtLV_CalendarChangeEvent calendarchangeEvent = new @__ExtLV_CalendarChangeEvent(newDate);
            this.parent.RaiseOnCalendarChange(this.parent, calendarchangeEvent);
        }
        
        public virtual void ChangeComplete(string origText, string newText) {
            @__ExtLV_ChangeCompleteEvent changecompleteEvent = new @__ExtLV_ChangeCompleteEvent(origText, newText);
            this.parent.RaiseOnChangeComplete(this.parent, changecompleteEvent);
        }
        
        public virtual void DropDownChangeComplete(string origText, string newText) {
            @__ExtLV_DropDownChangeCompleteEvent dropdownchangecompleteEvent = new @__ExtLV_DropDownChangeCompleteEvent(origText, newText);
            this.parent.RaiseOnDropDownChangeComplete(this.parent, dropdownchangecompleteEvent);
        }
        
        public virtual void DropDownChange(string origText) {
            @__ExtLV_DropDownChangeEvent dropdownchangeEvent = new @__ExtLV_DropDownChangeEvent(origText);
            this.parent.RaiseOnDropDownChange(this.parent, dropdownchangeEvent);
        }
        
        public virtual void DropDownClick() {
            System.EventArgs dropdownclickEvent = new System.EventArgs();
            this.parent.RaiseOnDropDownClick(this.parent, dropdownclickEvent);
        }
        
        public virtual void Click() {
            System.EventArgs clickEvent = new System.EventArgs();
            this.parent.RaiseOnClickEvent(this.parent, clickEvent);
        }
        
        public virtual void DblClick() {
            System.EventArgs dblclickEvent = new System.EventArgs();
            this.parent.RaiseOnDblClick(this.parent, dblclickEvent);
        }
        
        public virtual void KeyDown(ref short keyCode, ref short shift) {
            @__ExtLV_KeyDownEvent keydownEvent = new @__ExtLV_KeyDownEvent(keyCode, shift);
            this.parent.RaiseOnKeyDownEvent(this.parent, keydownEvent);
            keyCode = keydownEvent.keyCode;
            shift = keydownEvent.shift;
        }
        
        public virtual void KeyPress(ref short keyAscii) {
            @__ExtLV_KeyPressEvent keypressEvent = new @__ExtLV_KeyPressEvent(keyAscii);
            this.parent.RaiseOnKeyPressEvent(this.parent, keypressEvent);
            keyAscii = keypressEvent.keyAscii;
        }
        
        public virtual void KeyUp(ref short keyCode, ref short shift) {
            @__ExtLV_KeyUpEvent keyupEvent = new @__ExtLV_KeyUpEvent(keyCode, shift);
            this.parent.RaiseOnKeyUpEvent(this.parent, keyupEvent);
            keyCode = keyupEvent.keyCode;
            shift = keyupEvent.shift;
        }
        
        public virtual void MouseDown(ref short button, ref short shift, ref float x, ref float y) {
            @__ExtLV_MouseDownEvent mousedownEvent = new @__ExtLV_MouseDownEvent(button, shift, x, y);
            this.parent.RaiseOnMouseDownEvent(this.parent, mousedownEvent);
            button = mousedownEvent.button;
            shift = mousedownEvent.shift;
            x = mousedownEvent.x;
            y = mousedownEvent.y;
        }
        
        public virtual void MouseMove(ref short button, ref short shift, ref float x, ref float y) {
            @__ExtLV_MouseMoveEvent mousemoveEvent = new @__ExtLV_MouseMoveEvent(button, shift, x, y);
            this.parent.RaiseOnMouseMoveEvent(this.parent, mousemoveEvent);
            button = mousemoveEvent.button;
            shift = mousemoveEvent.shift;
            x = mousemoveEvent.x;
            y = mousemoveEvent.y;
        }
        
        public virtual void MouseUp(ref short button, ref short shift, ref float x, ref float y) {
            @__ExtLV_MouseUpEvent mouseupEvent = new @__ExtLV_MouseUpEvent(button, shift, x, y);
            this.parent.RaiseOnMouseUpEvent(this.parent, mouseupEvent);
            button = mouseupEvent.button;
            shift = mouseupEvent.shift;
            x = mouseupEvent.x;
            y = mouseupEvent.y;
        }
        
        public virtual void Change(string origText) {
            @__ExtLV_ChangeEvent changeEvent = new @__ExtLV_ChangeEvent(origText);
            this.parent.RaiseOnChange(this.parent, changeEvent);
        }
        
        public virtual void ColumnClick(MSComctlLib.ColumnHeader columnHeader) {
            @__ExtLV_ColumnClickEvent columnclickEvent = new @__ExtLV_ColumnClickEvent(columnHeader);
            this.parent.RaiseOnColumnClick(this.parent, columnclickEvent);
        }
        
        public virtual void DropDown() {
            System.EventArgs dropdownEvent = new System.EventArgs();
            this.parent.RaiseOnDropDown(this.parent, dropdownEvent);
        }
        
        public virtual void ItemCheck(MSComctlLib.ListItem item) {
            @__ExtLV_ItemCheckEvent itemcheckEvent = new @__ExtLV_ItemCheckEvent(item);
            this.parent.RaiseOnItemCheck(this.parent, itemcheckEvent);
        }
        
        public virtual void ItemClick(MSComctlLib.ListItem item, short button, bool secondClick) {
            @__ExtLV_ItemClickEvent itemclickEvent = new @__ExtLV_ItemClickEvent(item, button, secondClick);
            this.parent.RaiseOnItemClick(this.parent, itemclickEvent);
        }
        
        public virtual void Scroll() {
            System.EventArgs scrollEvent = new System.EventArgs();
            this.parent.RaiseOnScroll(this.parent, scrollEvent);
        }
        
        public virtual void NotInList(string oldValue, ref string newValue, ref bool cancel) {
            @__ExtLV_NotInListEvent notinlistEvent = new @__ExtLV_NotInListEvent(oldValue, newValue, cancel);
            this.parent.RaiseOnNotInList(this.parent, notinlistEvent);
            newValue = notinlistEvent.newValue;
            cancel = notinlistEvent.cancel;
        }
        
        public virtual void ColumnSortComplete() {
            System.EventArgs columnsortcompleteEvent = new System.EventArgs();
            this.parent.RaiseOnColumnSortComplete(this.parent, columnsortcompleteEvent);
        }
        
        public virtual void BeforeColumnSort(MSComctlLib.ColumnHeader columnHeader, ref ExtLVCTL.SortDataType sortType, ref string omitChar) {
            @__ExtLV_BeforeColumnSortEvent beforecolumnsortEvent = new @__ExtLV_BeforeColumnSortEvent(columnHeader, sortType, omitChar);
            this.parent.RaiseOnBeforeColumnSort(this.parent, beforecolumnsortEvent);
            sortType = beforecolumnsortEvent.sortType;
            omitChar = beforecolumnsortEvent.omitChar;
        }
        
        public virtual void TitleBarClick(short button) {
            @__ExtLV_TitleBarClickEvent titlebarclickEvent = new @__ExtLV_TitleBarClickEvent(button);
            this.parent.RaiseOnTitleBarClick(this.parent, titlebarclickEvent);
        }
        
        public virtual void CommandButtonClick() {
            System.EventArgs commandbuttonclickEvent = new System.EventArgs();
            this.parent.RaiseOnCommandButtonClick(this.parent, commandbuttonclickEvent);
        }
        
        public virtual void ExportToExcelComplete(ref ExtLVCTL.CEXCEL obj) {
            @__ExtLV_ExportToExcelCompleteEvent exporttoexcelcompleteEvent = new @__ExtLV_ExportToExcelCompleteEvent(obj);
            this.parent.RaiseOnExportToExcelComplete(this.parent, exporttoexcelcompleteEvent);
            obj = exporttoexcelcompleteEvent.obj;
        }
        
        public virtual void TabRequest(ref int itemIndex, int currentSubItem, ref int nextSubItem) {
            @__ExtLV_TabRequestEvent tabrequestEvent = new @__ExtLV_TabRequestEvent(itemIndex, currentSubItem, nextSubItem);
            this.parent.RaiseOnTabRequest(this.parent, tabrequestEvent);
            itemIndex = tabrequestEvent.itemIndex;
            nextSubItem = tabrequestEvent.nextSubItem;
        }
        
        public virtual void TextBoxValidate(ref bool cancel) {
            @__ExtLV_TextBoxValidateEvent textboxvalidateEvent = new @__ExtLV_TextBoxValidateEvent(cancel);
            this.parent.RaiseOnTextBoxValidate(this.parent, textboxvalidateEvent);
            cancel = textboxvalidateEvent.cancel;
        }
        
        public virtual void ComboBoxValidate(ref bool cancel) {
            @__ExtLV_ComboBoxValidateEvent comboboxvalidateEvent = new @__ExtLV_ComboBoxValidateEvent(cancel);
            this.parent.RaiseOnComboBoxValidate(this.parent, comboboxvalidateEvent);
            cancel = comboboxvalidateEvent.cancel;
        }
        
        public virtual void CalendarValidate(ref bool cancel) {
            @__ExtLV_CalendarValidateEvent calendarvalidateEvent = new @__ExtLV_CalendarValidateEvent(cancel);
            this.parent.RaiseOnCalendarValidate(this.parent, calendarvalidateEvent);
            cancel = calendarvalidateEvent.cancel;
        }
        
        public virtual void SpinnerDownClick() {
            System.EventArgs spinnerdownclickEvent = new System.EventArgs();
            this.parent.RaiseOnSpinnerDownClick(this.parent, spinnerdownclickEvent);
        }
        
        public virtual void SpinnerUpClick() {
            System.EventArgs spinnerupclickEvent = new System.EventArgs();
            this.parent.RaiseOnSpinnerUpClick(this.parent, spinnerupclickEvent);
        }
        
        public virtual void TabClick(ref int tabIndex) {
            @__ExtLV_TabClickEvent tabclickEvent = new @__ExtLV_TabClickEvent(tabIndex);
            this.parent.RaiseOnTabClick(this.parent, tabclickEvent);
            tabIndex = tabclickEvent.tabIndex;
        }
    }
}
